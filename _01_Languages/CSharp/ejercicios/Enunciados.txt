
üß© EJERCICIOS DE C# (DE MENOR A MAYOR DIFICULTAD)

------------------------------------------------------------
üü¢ NIVEL B√ÅSICO
------------------------------------------------------------

_01_HolaMundo.cs
Crea un programa que muestre por consola el texto ‚ÄúHola Mundo desde C#‚Äù.

_02_TiposDeDatos.cs
Declara variables de diferentes tipos (int, double, bool, char, string) y muestra sus valores.

_03_Operadores.cs
Declara dos n√∫meros enteros y muestra la suma, resta, multiplicaci√≥n, divisi√≥n y m√≥dulo.

_04_Condicionales.cs
Pide al usuario su edad y muestra si es menor de edad, adulto o jubilado.

_05_Bucles.cs
Muestra los n√∫meros del 1 al 10 usando for, while y do-while.

_06_EntradaSalida.cs
Pide al usuario su nombre y edad, y muestra un mensaje personalizado.

------------------------------------------------------------
üü° NIVEL POO
------------------------------------------------------------

_01_ClaseYObjeto.cs
Crea una clase Persona con nombre y edad, instancia un objeto y muestra sus datos.

_02_Constructores.cs
A√±ade un constructor a la clase Persona y crea varios objetos.

_03_Encapsulacion.cs
Implementa encapsulaci√≥n en una clase CuentaBancaria con m√©todos Depositar, Retirar y MostrarSaldo.

_04_Herencia.cs
Crea Empleado y Gerente (subclase) con atributos y m√©todos, mostrando herencia.

_05_Polimorfismo.cs
Crea una lista de Empleados y Gerentes y llama a MostrarDatos() usando polimorfismo.

_06_Interfaces.cs
Crea una interfaz IVehiculo con Arrancar y Detener, implementada por Coche y Moto.

------------------------------------------------------------
üü° NIVEL COLECCIONES / LINQ
------------------------------------------------------------

_01_Array.cs
Crea un array de enteros, asigna valores y mu√©stralos.

_02_List.cs
Crea una lista de nombres, a√±ade elementos y rec√≥rrela con foreach.

_03_Dictionary.cs
Crea un diccionario con productos y precios y mu√©stralos.

_04_Iteradores.cs
Usa un iterador para recorrer una lista de enteros y mostrar la suma.

_05_LINQ_Basico.cs
Usa LINQ para filtrar n√∫meros mayores a 25 en una lista.

_06_LINQ_Ordenar.cs
Usa LINQ para ordenar alfab√©ticamente una lista de nombres.

------------------------------------------------------------
üíæ NIVEL FICHEROS
------------------------------------------------------------

_01_EscribirArchivo.cs
Crea un archivo "nombres.txt" y escribe varios nombres.

_02_LeerArchivo.cs
Lee un archivo "nombres.txt" y muestra cada l√≠nea.

_03_CopiarArchivo.cs
Copia el contenido de "nombres.txt" en "copia.txt".

_04_AppendArchivo.cs
A√±ade nuevas l√≠neas a "nombres.txt" sin borrar el contenido anterior.

_05_SerializacionBinaria.cs
Crea una clase Persona, guarda objetos en binario y luego recup√©ralos.

_06_LeerArchivoConExcepciones.cs
Lee un archivo y maneja posibles errores con try-catch.

------------------------------------------------------------
‚ùó NIVEL EXCEPCIONES
------------------------------------------------------------

_01_TryCatchSimple.cs
Pide un n√∫mero y muestra su divisi√≥n entre 10. Maneja errores de formato.

_02_DivisionPorCero.cs
Pide dos n√∫meros y realiza la divisi√≥n. Maneja la divisi√≥n por cero.

_03_MultiplesCatch.cs
Manejo de m√∫ltiples excepciones: formato, divisi√≥n por cero y gen√©rica.

_04_ThrowExcepcion.cs
Crea un m√©todo que lance excepci√≥n si el n√∫mero es negativo.

_05_ExcepcionPersonalizada.cs
Crea EdadInvalidaException y l√°nzala si la edad es <0 o >120.

_06_Finally.cs
Pide un n√∫mero, realiza divisi√≥n y muestra mensaje en finally aunque haya error.
